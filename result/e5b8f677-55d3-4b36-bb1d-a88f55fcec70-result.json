{"name": "test_02", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <tjxg3_mfc.TJXG3MFC object at 0x7f6fac319e50>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=2)\n    @allure.title('test_02')\n    async def test_02(self):\n        for i, mfc in enumerate(get_mfcs()):\n            await set_mfc_sp_source(i, 'Fixed')\n            for it in get_mfc_sps(i):\n                pv1 = await get_mfc_pv(i)\n                await set_mfc_sp(i, it)\n                elapsed_time, timeout = await self.pv_close_to_sp(i, it)\n                pv2 = await get_mfc_pv(i)\n                if elapsed_time is not None:\n                    allure.attach(body=f'MFC{i+1}[{mfc}] {pv1}->{it} speed {elapsed_time} s, curr pv is {pv2}', name='Comment', attachment_type=allure.attachment_type.TEXT)\n                else:\n                    allure.attach(body=f'MFC{i+1}[{mfc}] {pv1}->{it} speed {timeout} s, curr pv is {pv2}', name='Error', attachment_type=allure.attachment_type.TEXT)\n                    await set_mfc_sp_source(i, 'Disable')\n>                   assert False\nE                   assert False\n\ntests/G3/tjxg3_mfc.py:57: AssertionError"}, "attachments": [{"name": "Error", "source": "327bd070-2ed6-4489-95e0-515d5c50c3b9-attachment.txt", "type": "text/plain"}], "start": 1752828199236, "stop": 1752828212257, "uuid": "5787c77f-b937-467c-9d0c-d3842cad1c11", "historyId": "1c843a2098c8e7c4f7159f893b446992", "testCaseId": "1c843a2098c8e7c4f7159f893b446992", "fullName": "tests.G3.tjxg3_mfc.TJXG3MFC#test_02", "labels": [{"name": "feature", "value": "MFC"}, {"name": "tag", "value": "asyncio"}, {"name": "tag", "value": "MFC"}, {"name": "parentSuite", "value": "tests.G3"}, {"name": "suite", "value": "tjxg3_mfc"}, {"name": "subSuite", "value": "TJXG3MFC"}, {"name": "host", "value": "ubuntu"}, {"name": "thread", "value": "152347-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.G3.tjxg3_mfc"}]}