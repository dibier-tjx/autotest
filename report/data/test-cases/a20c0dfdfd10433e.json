{"uid":"a20c0dfdfd10433e","name":"test_02","fullName":"tests.G3.tjxg3_ph.TJXG3PH#test_02","historyId":"6b2afe57db4e013577c36071c352c424","time":{"start":1752828209278,"stop":1752828222306,"duration":13028},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tjxg3_ph.TJXG3PH object at 0x7f88286639a0>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=2)\n    @allure.title('test_02')\n    async def test_02(self):\n        await set_ph_sp_source('Fixed')\n        for it in get_ph_sps():\n            pv1 = await get_ph_pv()\n            await set_ph_sp(it)\n            elapsed_time, timeout = await self.pv_close_to_sp(it)\n            pv2 = await get_ph_pv()\n            if elapsed_time is not None:\n                allure.attach(body=f'{pv1}->{it} speed {elapsed_time} s, curr pv is {pv2}', name='Comment', attachment_type=allure.attachment_type.TEXT)\n            else:\n                allure.attach(body=f'{pv1}->{it} speed {timeout} s, curr pv is {pv2}', name='Error', attachment_type=allure.attachment_type.TEXT)\n                await set_ph_sp_source('Disable')\n>               assert False\nE               assert False\n\ntests/G3/tjxg3_ph.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1752828167092,"stop":1752828167092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1752828209275,"stop":1752828209276,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tjxg3_ph.TJXG3PH object at 0x7f88286639a0>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=2)\n    @allure.title('test_02')\n    async def test_02(self):\n        await set_ph_sp_source('Fixed')\n        for it in get_ph_sps():\n            pv1 = await get_ph_pv()\n            await set_ph_sp(it)\n            elapsed_time, timeout = await self.pv_close_to_sp(it)\n            pv2 = await get_ph_pv()\n            if elapsed_time is not None:\n                allure.attach(body=f'{pv1}->{it} speed {elapsed_time} s, curr pv is {pv2}', name='Comment', attachment_type=allure.attachment_type.TEXT)\n            else:\n                allure.attach(body=f'{pv1}->{it} speed {timeout} s, curr pv is {pv2}', name='Error', attachment_type=allure.attachment_type.TEXT)\n                await set_ph_sp_source('Disable')\n>               assert False\nE               assert False\n\ntests/G3/tjxg3_ph.py:55: AssertionError","steps":[],"attachments":[{"uid":"654149f7e1687ea4","name":"Error","source":"654149f7e1687ea4.txt","type":"text/plain","size":35}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1752828222317,"stop":1752828222317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1752828222317,"stop":1752828222317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1752828222317,"stop":1752828222317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1752828222318,"stop":1752828222318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"pH"},{"name":"tag","value":"asyncio"},{"name":"tag","value":"pH"},{"name":"parentSuite","value":"tests.G3"},{"name":"suite","value":"tjxg3_ph"},{"name":"subSuite","value":"TJXG3PH"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"152350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.G3.tjxg3_ph"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["asyncio","pH"]},"source":"a20c0dfdfd10433e.json","parameterValues":[]}