{"uid":"4692c70afd1a0d80","name":"test_01","fullName":"tests.G3.tjxg3_do.TJXG3DO#test_01","historyId":"38f62f891ed3983ec3ce4e9499bda746","time":{"start":1752828175177,"stop":1752828183186,"duration":8009},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tjxg3_do.TJXG3DO object at 0x7f8828645d60>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=1)\n    @allure.title('test_01')\n    async def test_01(self):\n        await set_do_sp(10)\n        await set_do_sp_source('Fixed')\n        await asyncio.sleep(2)\n        pv1 = await get_do_pv()\n        if pv1 > 0:\n            await set_do_sp_source('Disable')\n            await asyncio.sleep(2)\n            pv2 = await get_do_pv()\n            if math.fabs(pv2) > 1e-10:\n                allure.attach(body=f'curr pv is {pv2}, expect is zero', name='Error', attachment_type=allure.attachment_type.TEXT)\n                assert False\n        else:\n            allure.attach(body=f'curr pv is {pv1}, expect is greater than zero', name='Error', attachment_type=allure.attachment_type.TEXT)\n>           assert False\nE           assert False\n\ntests/G3/tjxg3_do.py:38: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1752828167092,"stop":1752828167092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1752828175175,"stop":1752828175175,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tjxg3_do.TJXG3DO object at 0x7f8828645d60>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=1)\n    @allure.title('test_01')\n    async def test_01(self):\n        await set_do_sp(10)\n        await set_do_sp_source('Fixed')\n        await asyncio.sleep(2)\n        pv1 = await get_do_pv()\n        if pv1 > 0:\n            await set_do_sp_source('Disable')\n            await asyncio.sleep(2)\n            pv2 = await get_do_pv()\n            if math.fabs(pv2) > 1e-10:\n                allure.attach(body=f'curr pv is {pv2}, expect is zero', name='Error', attachment_type=allure.attachment_type.TEXT)\n                assert False\n        else:\n            allure.attach(body=f'curr pv is {pv1}, expect is greater than zero', name='Error', attachment_type=allure.attachment_type.TEXT)\n>           assert False\nE           assert False\n\ntests/G3/tjxg3_do.py:38: AssertionError","steps":[],"attachments":[{"uid":"2027da6548454b06","name":"Error","source":"2027da6548454b06.txt","type":"text/plain","size":43}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1752828183193,"stop":1752828183193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1752828183193,"stop":1752828183193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1752828183193,"stop":1752828183193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1752828183193,"stop":1752828183193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"DO"},{"name":"tag","value":"asyncio"},{"name":"tag","value":"DO"},{"name":"parentSuite","value":"tests.G3"},{"name":"suite","value":"tjxg3_do"},{"name":"subSuite","value":"TJXG3DO"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"152350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.G3.tjxg3_do"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["asyncio","DO"]},"source":"4692c70afd1a0d80.json","parameterValues":[]}