{"uid":"54553296db711347","name":"test_03","fullName":"tests.G3.tjxg3_agit.TJXG3Agit#test_03","historyId":"4313fffc9a3c1d8aa57aa8e53a4eece8","time":{"start":1752828225326,"stop":1752828240342,"duration":15016},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tjxg3_agit.TJXG3Agit object at 0x7f6fac30e460>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=3)\n    @allure.title('test_03')\n    async def test_03(self):\n        profile = await set_agit_profile()\n        if profile is not None:\n            assert await restart_runtime()\n            await set_agit_sp_source('Profile')\n            for it in profile:\n                pv1 = await get_agit_pv()\n                elapsed_time, timeout = await self.pv_close_to_sp(it[1], it[0])\n                pv2 = await get_agit_pv()\n                if elapsed_time is not None:\n                    allure.attach(body=f'{pv1}->{it[1]} speed {elapsed_time} s, curr pv is {pv2}', name='Comment', attachment_type=allure.attachment_type.TEXT)\n                else:\n                    allure.attach(body=f'{pv1}->{it[1]} speed {timeout} s, curr pv is {pv2}', name='Error', attachment_type=allure.attachment_type.TEXT)\n                    await set_agit_sp_source('Disable')\n>                   assert False\nE                   assert False\n\ntests/G3/tjxg3_agit.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1752828167096,"stop":1752828167096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1752828225325,"stop":1752828225326,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <tjxg3_agit.TJXG3Agit object at 0x7f6fac30e460>\n\n    @pytest.mark.asyncio\n    @pytest.mark.run(order=3)\n    @allure.title('test_03')\n    async def test_03(self):\n        profile = await set_agit_profile()\n        if profile is not None:\n            assert await restart_runtime()\n            await set_agit_sp_source('Profile')\n            for it in profile:\n                pv1 = await get_agit_pv()\n                elapsed_time, timeout = await self.pv_close_to_sp(it[1], it[0])\n                pv2 = await get_agit_pv()\n                if elapsed_time is not None:\n                    allure.attach(body=f'{pv1}->{it[1]} speed {elapsed_time} s, curr pv is {pv2}', name='Comment', attachment_type=allure.attachment_type.TEXT)\n                else:\n                    allure.attach(body=f'{pv1}->{it[1]} speed {timeout} s, curr pv is {pv2}', name='Error', attachment_type=allure.attachment_type.TEXT)\n                    await set_agit_sp_source('Disable')\n>                   assert False\nE                   assert False\n\ntests/G3/tjxg3_agit.py:75: AssertionError","steps":[],"attachments":[{"uid":"ac6296d8f14fb7f0","name":"Error","source":"ac6296d8f14fb7f0.txt","type":"text/plain","size":33}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1752828240347,"stop":1752828240347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1752828240347,"stop":1752828240347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1752828240347,"stop":1752828240347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1752828240347,"stop":1752828240347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Agit"},{"name":"tag","value":"asyncio"},{"name":"tag","value":"Agit"},{"name":"parentSuite","value":"tests.G3"},{"name":"suite","value":"tjxg3_agit"},{"name":"subSuite","value":"TJXG3Agit"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"152347-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.G3.tjxg3_agit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["asyncio","Agit"]},"source":"54553296db711347.json","parameterValues":[]}